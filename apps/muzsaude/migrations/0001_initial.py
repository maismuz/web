# Generated by Django 5.2 on 2025-07-16 17:39

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(help_text='Nome completo do paciente', max_length=150, verbose_name='Nome Completo')),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message='CPF deve estar no formato 000.000.000-00 ou conter 11 dígitos', regex='^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$|^\\d{11}$')], verbose_name='CPF')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('sexo', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro')], max_length=1, verbose_name='Sexo')),
                ('telefone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Digite um número de telefone válido', regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$')], verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, help_text='E-mail para contato (opcional)', max_length=254, verbose_name='E-mail')),
                ('endereco', models.TextField(help_text='Endereço completo do paciente', verbose_name='Endereço')),
                ('historico_medico', models.TextField(blank=True, help_text='Histórico médico do paciente', verbose_name='Histórico Médico')),
                ('observacoes', models.TextField(blank=True, help_text='Observações gerais sobre o paciente', verbose_name='Observações')),
                ('consentimento_lgpd', models.BooleanField(default=False, help_text='Paciente consentiu com o tratamento dos dados pessoais', verbose_name='Consentimento LGPD')),
                ('ativo', models.BooleanField(default=True, help_text='Indica se o paciente está ativo no sistema', verbose_name='Ativo')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
                'ordering': ['nome_completo'],
            },
        ),
        migrations.CreateModel(
            name='Solicitacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('consulta', 'Consulta Médica'), ('cirurgia', 'Cirurgia'), ('exame', 'Exame'), ('transporte', 'Transporte Médico'), ('medicamento', 'Medicamento'), ('fisioterapia', 'Fisioterapia'), ('outros', 'Outros')], max_length=20, verbose_name='Tipo de Solicitação')),
                ('especialidade', models.CharField(blank=True, help_text='Especialidade médica (se aplicável)', max_length=100, verbose_name='Especialidade')),
                ('descricao', models.TextField(help_text='Descrição detalhada da solicitação', verbose_name='Descrição')),
                ('justificativa', models.TextField(blank=True, help_text='Justificativa médica para a solicitação', verbose_name='Justificativa Médica')),
                ('prioridade', models.CharField(choices=[('baixa', 'Baixa'), ('normal', 'Normal'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='normal', max_length=10, verbose_name='Prioridade')),
                ('arquivos', models.FileField(blank=True, help_text='Documentos anexos (receitas, exames, etc.)', null=True, upload_to='solicitacoes/documentos/', verbose_name='Documentos')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('em_analise', 'Em Análise'), ('aprovado', 'Aprovado'), ('agendado', 'Agendado'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado'), ('rejeitado', 'Rejeitado')], default='pendente', max_length=20, verbose_name='Status')),
                ('observacoes_internas', models.TextField(blank=True, help_text='Observações para uso interno da equipe', verbose_name='Observações Internas')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solicitacoes', to='muzsaude.paciente', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Solicitação',
                'verbose_name_plural': 'Solicitações',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora_agendada', models.DateTimeField(verbose_name='Data e Hora Agendada')),
                ('data_hora_fim', models.DateTimeField(blank=True, help_text='Data e hora prevista para o fim do atendimento', null=True, verbose_name='Data e Hora de Fim')),
                ('profissional', models.CharField(blank=True, help_text='Nome do profissional responsável', max_length=150, verbose_name='Profissional')),
                ('local', models.CharField(help_text='Local onde será realizado o atendimento', max_length=150, verbose_name='Local')),
                ('endereco_local', models.TextField(blank=True, help_text='Endereço completo do local de atendimento', verbose_name='Endereço do Local')),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre o agendamento', verbose_name='Observações')),
                ('status', models.CharField(choices=[('agendado', 'Agendado'), ('confirmado', 'Confirmado'), ('realizado', 'Realizado'), ('falta', 'Falta do Paciente'), ('cancelado', 'Cancelado'), ('reagendado', 'Reagendado')], default='agendado', max_length=15, verbose_name='Status do Agendamento')),
                ('motivo_cancelamento', models.TextField(blank=True, help_text='Motivo em caso de cancelamento', verbose_name='Motivo do Cancelamento')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('solicitacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='muzsaude.solicitacao', verbose_name='Solicitação')),
            ],
            options={
                'verbose_name': 'Agendamento',
                'verbose_name_plural': 'Agendamentos',
                'ordering': ['data_hora_agendada'],
            },
        ),
    ]
