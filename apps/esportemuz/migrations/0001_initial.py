# Generated by Django 5.2 on 2025-07-16 17:39

import apps.esportemuz.models
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Campeonato',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, unique=True, verbose_name='Nome do Campeonato')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_fim', models.DateField(verbose_name='Data de Fim')),
                ('status', models.CharField(choices=[('nao_iniciado', 'Não Iniciado'), ('em_andamento', 'Em Andamento'), ('encerrado', 'Encerrado'), ('cancelado', 'Cancelado')], default='nao_iniciado', max_length=15, verbose_name='Status')),
                ('premiacao', models.TextField(blank=True, help_text='Descrição da premiação do campeonato', verbose_name='Premiação')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Campeonato',
                'verbose_name_plural': 'Campeonatos',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Equipe',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, unique=True, verbose_name='Nome da Equipe')),
                ('escudo', models.ImageField(blank=True, null=True, upload_to=apps.esportemuz.models.Equipe.get_path_escudo, verbose_name='Escudo da Equipe')),
                ('cidade', models.CharField(blank=True, help_text='Cidade da equipe', max_length=100, verbose_name='Cidade')),
                ('data_fundacao', models.DateField(blank=True, null=True, verbose_name='Data de Fundação')),
                ('ativa', models.BooleanField(default=True, help_text='Indica se a equipe está ativa', verbose_name='Ativa')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Equipe',
                'verbose_name_plural': 'Equipes',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='LocalPartida',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, unique=True, verbose_name='Nome do Local')),
                ('endereco', models.CharField(blank=True, help_text='Endereço completo do local', max_length=255, verbose_name='Endereço')),
                ('capacidade', models.PositiveIntegerField(blank=True, help_text='Capacidade máxima de público', null=True, verbose_name='Capacidade')),
                ('ativo', models.BooleanField(default=True, help_text='Indica se o local está ativo', verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Local da Partida',
                'verbose_name_plural': 'Locais das Partidas',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Modalidade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome da modalidade esportiva', max_length=255, unique=True, verbose_name='Nome da Modalidade')),
                ('ativa', models.BooleanField(default=True, help_text='Indica se a modalidade está ativa', verbose_name='Ativa')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Modalidade',
                'verbose_name_plural': 'Modalidades',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='TipoCampeonato',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Tipo de campeonato (ex: pontos corridos, mata-mata)', max_length=255, unique=True, verbose_name='Nome do Tipo')),
                ('descricao', models.TextField(blank=True, help_text='Descrição do tipo de campeonato', verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, help_text='Indica se o tipo está ativo', verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Tipo de Campeonato',
                'verbose_name_plural': 'Tipos de Campeonato',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Classificacao',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('pontos', models.PositiveIntegerField(default=0, verbose_name='Pontos')),
                ('partidas_jogadas', models.PositiveIntegerField(default=0, verbose_name='Partidas Jogadas')),
                ('vitorias', models.PositiveIntegerField(default=0, verbose_name='Vitórias')),
                ('empates', models.PositiveIntegerField(default=0, verbose_name='Empates')),
                ('derrotas', models.PositiveIntegerField(default=0, verbose_name='Derrotas')),
                ('gols_pro', models.PositiveIntegerField(default=0, verbose_name='Gols Pró')),
                ('gols_contra', models.PositiveIntegerField(default=0, verbose_name='Gols Contra')),
                ('saldo_gols', models.IntegerField(default=0, verbose_name='Saldo de Gols')),
                ('campeonato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classificacoes', to='esportemuz.campeonato', verbose_name='Campeonato')),
                ('equipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classificacoes', to='esportemuz.equipe', verbose_name='Equipe')),
            ],
            options={
                'verbose_name': 'Classificação',
                'verbose_name_plural': 'Classificações',
                'ordering': ['-pontos', '-vitorias', '-saldo_gols', '-gols_pro'],
                'unique_together': {('campeonato', 'equipe')},
            },
        ),
        migrations.AddField(
            model_name='campeonato',
            name='equipes',
            field=models.ManyToManyField(through='esportemuz.Classificacao', to='esportemuz.equipe', verbose_name='Equipes Participantes'),
        ),
        migrations.AddField(
            model_name='campeonato',
            name='modalidade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='campeonatos', to='esportemuz.modalidade', verbose_name='Modalidade'),
        ),
        migrations.CreateModel(
            name='Partida',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora', models.DateTimeField(verbose_name='Data e Hora da Partida')),
                ('gols_mandante', models.PositiveIntegerField(default=0, verbose_name='Gols da Equipe Mandante')),
                ('gols_visitante', models.PositiveIntegerField(default=0, verbose_name='Gols da Equipe Visitante')),
                ('status', models.CharField(choices=[('agendada', 'Agendada'), ('em_andamento', 'Em Andamento'), ('encerrada', 'Encerrada'), ('adiada', 'Adiada'), ('cancelada', 'Cancelada')], default='agendada', max_length=15, verbose_name='Status da Partida')),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre a partida', verbose_name='Observações')),
                ('campeonato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partidas', to='esportemuz.campeonato', verbose_name='Campeonato')),
                ('equipe_mandante', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='partidas_mandante', to='esportemuz.equipe', verbose_name='Equipe Mandante')),
                ('equipe_visitante', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='partidas_visitante', to='esportemuz.equipe', verbose_name='Equipe Visitante')),
                ('local', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='partidas', to='esportemuz.localpartida', verbose_name='Local da Partida')),
            ],
            options={
                'verbose_name': 'Partida',
                'verbose_name_plural': 'Partidas',
                'ordering': ['-data_hora'],
            },
        ),
        migrations.AddField(
            model_name='campeonato',
            name='tipo_campeonato',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='campeonatos', to='esportemuz.tipocampeonato', verbose_name='Tipo de Campeonato'),
        ),
    ]
