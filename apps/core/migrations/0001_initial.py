# Generated by Django 5.2 on 2025-05-07 14:42

import apps.core.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='perfis/', verbose_name='Foto de Perfil')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Formato de telefone inválido. Use o formato: (XX) XXXXX-XXXX.', regex='^\\(\\d{2}\\) \\d{5}-\\d{4}$')], verbose_name='Telefone')),
                ('data_nascimento', models.DateField(blank=True, null=True, validators=[apps.core.models.validate_date_of_birth], verbose_name='Data de Nascimento')),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[apps.core.models.validate_cpf], verbose_name='CPF')),
                ('rg', models.CharField(max_length=20, verbose_name='RG')),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro'), ('N', 'Prefiro não informar')], max_length=1, verbose_name='Gênero')),
                ('linkedin', models.URLField(blank=True, help_text='URL do perfil no LinkedIn.', null=True, verbose_name='LinkedIn')),
                ('website', models.URLField(blank=True, help_text='URL do website pessoal ou profissional.', null=True, verbose_name='Website')),
                ('profissao', models.CharField(blank=True, help_text='Profissão atual.', max_length=100, null=True, verbose_name='Profissão')),
                ('bio', models.TextField(blank=True, help_text='Breve descrição profissional.', null=True, verbose_name='Biografia')),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfis',
                'ordering': ['usuario__username'],
            },
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logradouro', models.CharField(help_text='Nome da rua, avenida, etc.', max_length=255, verbose_name='Logradouro')),
                ('numero', models.CharField(help_text='Número do endereço', max_length=20, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, help_text='Complemento do endereço.', max_length=255, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(help_text='Bairro do endereço.', max_length=100, verbose_name='Bairro')),
                ('cidade', models.CharField(help_text='Cidade do endereço.', max_length=100, verbose_name='Cidade')),
                ('estado', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], help_text='Estado do endereço.', max_length=2, verbose_name='Estado')),
                ('cep', models.CharField(help_text='CEP no formato XXXXX-XXX.', max_length=10, validators=[django.core.validators.RegexValidator(message='Formato de CEP inválido. Use o formato: XXXXX-XXX.', regex='^\\d{5}-\\d{3}$')], verbose_name='CEP')),
                ('perfil', models.ForeignKey(help_text='Perfil associado a este endereço.', on_delete=django.db.models.deletion.CASCADE, related_name='enderecos', to='core.perfil', verbose_name='Perfil')),
            ],
            options={
                'verbose_name': 'Endereço',
                'verbose_name_plural': 'Endereços',
            },
        ),
        migrations.AddIndex(
            model_name='perfil',
            index=models.Index(fields=['cpf'], name='core_perfil_cpf_bcb4f2_idx'),
        ),
        migrations.AddIndex(
            model_name='perfil',
            index=models.Index(fields=['usuario'], name='core_perfil_usuario_4bc292_idx'),
        ),
    ]
