# Generated by Django 5.2 on 2025-07-16 17:39

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Tipo de Doação')),
                ('descricao', models.TextField(blank=True, help_text='Descrição da categoria de doação', verbose_name='Descrição')),
                ('ativa', models.BooleanField(default=True, help_text='Indica se a categoria está ativa', verbose_name='Ativa')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sigla', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, unique=True, verbose_name='Estado')),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
                'ordering': ['sigla'],
            },
        ),
        migrations.CreateModel(
            name='Doacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título da Doação')),
                ('descricao', models.TextField(help_text='Descreva o que está sendo solicitado', verbose_name='Descrição')),
                ('quantidade_necessaria', models.PositiveIntegerField(blank=True, help_text='Quantidade de itens necessários (opcional)', null=True, verbose_name='Quantidade Necessária')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_limite', models.DateField(blank=True, help_text='Data limite para receber as doações', null=True, verbose_name='Data Limite')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('em_andamento', 'Em Andamento'), ('atendido', 'Atendido'), ('cancelado', 'Cancelado')], default='pendente', max_length=15, verbose_name='Status')),
                ('contato', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Digite um número de telefone válido', regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$')], verbose_name='Contato')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='doacoes', to='doamuz.categoria', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Doação',
                'verbose_name_plural': 'Doações',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='Cidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome da Cidade')),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cidades', to='doamuz.estado', verbose_name='Estado')),
            ],
            options={
                'verbose_name': 'Cidade',
                'verbose_name_plural': 'Cidades',
                'ordering': ['estado__sigla', 'nome'],
                'unique_together': {('nome', 'estado')},
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensagem', models.TextField(help_text='Descreva sua experiência', verbose_name='Mensagem')),
                ('avaliacao', models.IntegerField(choices=[(1, 'Muito Ruim'), (2, 'Ruim'), (3, 'Regular'), (4, 'Bom'), (5, 'Excelente')], help_text='Avalie de 1 a 5 estrelas', verbose_name='Avaliação')),
                ('data_comentario', models.DateTimeField(auto_now_add=True, verbose_name='Data do Comentário')),
                ('email_contato', models.EmailField(blank=True, help_text='E-mail para contato (opcional)', max_length=254, verbose_name='E-mail para Contato')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='feedbacks', to='doamuz.categoria', verbose_name='Categoria da Doação')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
                'ordering': ['-data_comentario'],
            },
        ),
        migrations.CreateModel(
            name='Ongs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_organizacao', models.CharField(max_length=200, verbose_name='Nome da Organização')),
                ('descricao', models.TextField(help_text='Descrição da organização e suas atividades', verbose_name='Descrição')),
                ('contato', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Digite um número de telefone válido', regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$')], verbose_name='Telefone de Contato')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail')),
                ('horario_funcionamento', models.CharField(help_text='Ex: Segunda a Sexta, 8h às 17h', max_length=100, verbose_name='Horário de Funcionamento')),
                ('endereco', models.CharField(max_length=200, verbose_name='Endereço')),
                ('cnpj', models.CharField(blank=True, max_length=18, validators=[django.core.validators.RegexValidator(message='CNPJ deve estar no formato 00.000.000/0000-00', regex='^\\d{2}\\.\\d{3}\\.\\d{3}/\\d{4}-\\d{2}$')], verbose_name='CNPJ')),
                ('ativa', models.BooleanField(default=True, help_text='Indica se a ONG está ativa', verbose_name='Ativa')),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ongs', to='doamuz.categoria', verbose_name='Categoria Principal')),
                ('cidade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ongs', to='doamuz.cidade', verbose_name='Cidade')),
            ],
            options={
                'verbose_name': 'ONG',
                'verbose_name_plural': 'ONGs',
                'ordering': ['nome_organizacao'],
            },
        ),
        migrations.CreateModel(
            name='Pessoa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome Completo')),
                ('titulo', models.CharField(help_text='Título da necessidade ou oferta', max_length=200, verbose_name='Título')),
                ('descricao', models.TextField(help_text='Descrição detalhada', verbose_name='Descrição')),
                ('prazo', models.DateField(blank=True, help_text='Data limite (se aplicável)', null=True, verbose_name='Prazo')),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='pessoas/', verbose_name='Imagem')),
                ('contato', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Digite um número de telefone válido', regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$')], verbose_name='Telefone de Contato')),
                ('mostrar_nome', models.BooleanField(default=True, help_text='Marcar para mostrar o nome publicamente', verbose_name='Mostrar Nome')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pessoas', to='doamuz.categoria', verbose_name='Categoria de Interesse')),
            ],
            options={
                'verbose_name': 'Pessoa',
                'verbose_name_plural': 'Pessoas',
                'ordering': ['-data_cadastro'],
            },
        ),
        migrations.CreateModel(
            name='Solicitacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título da Solicitação')),
                ('descricao', models.TextField(help_text='Descrição completa da necessidade', verbose_name='Descrição')),
                ('tipo_solicitante', models.CharField(choices=[('pessoa', 'Pessoa Física'), ('ong', 'ONG')], max_length=10, verbose_name='Tipo de Solicitante')),
                ('nome_solicitante', models.CharField(max_length=200, verbose_name='Nome do Solicitante')),
                ('prazo', models.DateField(blank=True, help_text='Data limite para receber a doação', null=True, verbose_name='Prazo')),
                ('contato', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Digite um número de telefone válido', regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$')], verbose_name='Telefone de Contato')),
                ('imagem', models.ImageField(blank=True, help_text='Imagem relacionada à solicitação', null=True, upload_to='solicitacoes/', verbose_name='Imagem')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('atendida', models.BooleanField(default=False, help_text='Marcar quando a solicitação for atendida', verbose_name='Atendida')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='solicitacoes', to='doamuz.categoria', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Solicitação',
                'verbose_name_plural': 'Solicitações',
                'ordering': ['-data_criacao'],
            },
        ),
    ]
