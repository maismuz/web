# Generated by Django 5.2 on 2025-07-16 17:39

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Combustivel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True, verbose_name='Nome do Combustível')),
                ('descricao', models.TextField(blank=True, help_text='Descrição do tipo de combustível', verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Combustível',
                'verbose_name_plural': 'Combustíveis',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Local',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome do Local')),
                ('endereco', models.CharField(blank=True, max_length=200, verbose_name='Endereço')),
                ('cidade', models.CharField(max_length=100, verbose_name='Cidade')),
                ('estado', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, verbose_name='Estado')),
                ('cep', models.CharField(blank=True, max_length=9, validators=[django.core.validators.RegexValidator(message='CEP deve estar no formato 00000-000', regex='^\\d{5}-?\\d{3}$')], verbose_name='CEP')),
                ('coordenadas', models.CharField(blank=True, help_text='Coordenadas GPS (opcional)', max_length=50, verbose_name='Coordenadas GPS')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Local',
                'verbose_name_plural': 'Locais',
                'ordering': ['estado', 'cidade', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Motorista_MoveMuz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome Completo')),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message='CPF deve estar no formato 000.000.000-00 ou conter 11 dígitos', regex='^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$|^\\d{11}$')], verbose_name='CPF')),
                ('telefone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Digite um número de telefone válido', regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$')], verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail')),
                ('cnh_numero', models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message='CNH deve conter 11 dígitos', regex='^\\d{11}$')], verbose_name='Número da CNH')),
                ('categoria_cnh', models.CharField(help_text='Ex: A, B, C, D, E', max_length=5, verbose_name='Categoria da CNH')),
                ('validade_cnh', models.DateField(verbose_name='Validade da CNH')),
                ('data_nascimento', models.DateField(verbose_name='Data de Nascimento')),
                ('endereco', models.CharField(blank=True, max_length=255, verbose_name='Endereço')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
            ],
            options={
                'verbose_name': 'Motorista',
                'verbose_name_plural': 'Motoristas',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='TipoVeiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, unique=True, verbose_name='Nome do Tipo')),
                ('descricao', models.TextField(blank=True, help_text='Descrição do tipo de veículo', verbose_name='Descrição')),
                ('capacidade_padrao', models.PositiveIntegerField(blank=True, help_text='Capacidade padrão para este tipo de veículo', null=True, verbose_name='Capacidade Padrão')),
            ],
            options={
                'verbose_name': 'Tipo de Veículo',
                'verbose_name_plural': 'Tipos de Veículos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Ponto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do Ponto')),
                ('endereco', models.CharField(blank=True, help_text='Endereço ou descrição da localização', max_length=200, verbose_name='Endereço')),
                ('coordenadas', models.CharField(blank=True, max_length=50, verbose_name='Coordenadas GPS')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('local', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pontos', to='movemuz.local', verbose_name='Local')),
            ],
            options={
                'verbose_name': 'Ponto de Embarque/Desembarque',
                'verbose_name_plural': 'Pontos de Embarque/Desembarque',
                'ordering': ['local__nome', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Veiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modelo', models.CharField(max_length=100, verbose_name='Modelo')),
                ('marca', models.CharField(max_length=50, verbose_name='Marca')),
                ('placa', models.CharField(max_length=8, unique=True, validators=[django.core.validators.RegexValidator(message='Placa deve estar no formato ABC1234 ou ABC1D23', regex='^[A-Z]{3}[0-9][A-Z0-9][0-9]{2}$|^[A-Z]{3}[0-9]{4}$')], verbose_name='Placa')),
                ('cor', models.CharField(max_length=30, verbose_name='Cor')),
                ('ano_fabricacao', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2026)], verbose_name='Ano de Fabricação')),
                ('ano_modelo', models.IntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2026)], verbose_name='Ano do Modelo')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='veiculos/', verbose_name='Foto')),
                ('capacidade', models.PositiveIntegerField(help_text='Número de passageiros', verbose_name='Capacidade')),
                ('renavam', models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message='RENAVAM deve conter 11 dígitos', regex='^\\d{11}$')], verbose_name='RENAVAM')),
                ('chassi', models.CharField(max_length=17, unique=True, verbose_name='Chassi')),
                ('quilometragem', models.PositiveIntegerField(default=0, verbose_name='Quilometragem')),
                ('condicao_manutencao', models.CharField(choices=[('excelente', 'Excelente'), ('bom', 'Bom'), ('regular', 'Regular'), ('manutencao', 'Em Manutenção'), ('inativo', 'Inativo')], default='bom', max_length=15, verbose_name='Condição de Manutenção')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('combustivel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='veiculos', to='movemuz.combustivel', verbose_name='Combustível')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='veiculos', to='movemuz.tipoveiculo', verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Veículo',
                'verbose_name_plural': 'Veículos',
                'ordering': ['marca', 'modelo'],
            },
        ),
        migrations.CreateModel(
            name='HorarioTransporte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome identificador da linha de transporte', max_length=100, verbose_name='Nome da Linha')),
                ('horario_partida', models.TimeField(verbose_name='Horário de Partida')),
                ('horario_chegada_previsto', models.TimeField(blank=True, null=True, verbose_name='Horário de Chegada Previsto')),
                ('dias_funcionamento', models.CharField(choices=[('segunda_sexta', 'Segunda a Sexta'), ('sabados', 'Sábados'), ('domingos', 'Domingos'), ('fins_semana', 'Fins de Semana'), ('todos_dias', 'Todos os Dias'), ('personalizado', 'Personalizado')], max_length=20, verbose_name='Dias de Funcionamento')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('destino', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='horarios_destino', to='movemuz.local', verbose_name='Destino')),
                ('origem', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='horarios_origem', to='movemuz.local', verbose_name='Origem')),
                ('veiculo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='horarios', to='movemuz.veiculo', verbose_name='Veículo')),
            ],
            options={
                'verbose_name': 'Horário de Transporte',
                'verbose_name_plural': 'Horários de Transporte',
                'ordering': ['origem__nome', 'horario_partida'],
            },
        ),
        migrations.CreateModel(
            name='EscalaVeiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_fim', models.DateField(verbose_name='Data de Fim')),
                ('turno', models.CharField(choices=[('manha', 'Manhã'), ('tarde', 'Tarde'), ('noite', 'Noite'), ('integral', 'Integral')], max_length=10, verbose_name='Turno')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('motorista', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='escalas', to='movemuz.motorista_movemuz', verbose_name='Motorista')),
                ('veiculo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='escalas', to='movemuz.veiculo', verbose_name='Veículo')),
            ],
            options={
                'verbose_name': 'Escala do Veículo',
                'verbose_name_plural': 'Escalas dos Veículos',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Viagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_viagem', models.DateField(verbose_name='Data da Viagem')),
                ('horario_saida_real', models.TimeField(blank=True, null=True, verbose_name='Horário de Saída Real')),
                ('horario_chegada_real', models.TimeField(blank=True, null=True, verbose_name='Horário de Chegada Real')),
                ('passageiros_transportados', models.PositiveIntegerField(default=0, verbose_name='Passageiros Transportados')),
                ('quilometragem_inicial', models.PositiveIntegerField(blank=True, null=True, verbose_name='Quilometragem Inicial')),
                ('quilometragem_final', models.PositiveIntegerField(blank=True, null=True, verbose_name='Quilometragem Final')),
                ('status', models.CharField(choices=[('agendada', 'Agendada'), ('em_andamento', 'Em Andamento'), ('concluida', 'Concluída'), ('cancelada', 'Cancelada')], default='agendada', max_length=15, verbose_name='Status')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('horario_transporte', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='viagens', to='movemuz.horariotransporte', verbose_name='Horário de Transporte')),
                ('motorista', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='viagens', to='movemuz.motorista_movemuz', verbose_name='Motorista')),
            ],
            options={
                'verbose_name': 'Viagem',
                'verbose_name_plural': 'Viagens',
                'ordering': ['-data_viagem', '-horario_transporte__horario_partida'],
                'unique_together': {('horario_transporte', 'data_viagem')},
            },
        ),
        migrations.CreateModel(
            name='Passageiro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do Passageiro')),
                ('documento', models.CharField(blank=True, help_text='CPF, RG ou outro documento', max_length=20, verbose_name='Documento de Identificação')),
                ('telefone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Digite um número de telefone válido', regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$')], verbose_name='Telefone')),
                ('observacao', models.TextField(blank=True, verbose_name='Observação')),
                ('ponto_desembarque', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='desembarques', to='movemuz.ponto', verbose_name='Ponto de Desembarque')),
                ('ponto_embarque', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='embarques', to='movemuz.ponto', verbose_name='Ponto de Embarque')),
                ('viagem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passageiros', to='movemuz.viagem', verbose_name='Viagem')),
            ],
            options={
                'verbose_name': 'Passageiro',
                'verbose_name_plural': 'Passageiros',
                'ordering': ['viagem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='OcupacaoVeiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passageiros_confirmados', models.PositiveIntegerField(default=0, verbose_name='Passageiros Confirmados')),
                ('passageiros_em_espera', models.PositiveIntegerField(default=0, verbose_name='Passageiros em Lista de Espera')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('viagem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ocupacao', to='movemuz.viagem', verbose_name='Viagem')),
            ],
            options={
                'verbose_name': 'Ocupação do Veículo',
                'verbose_name_plural': 'Ocupações dos Veículos',
                'ordering': ['-atualizado_em'],
            },
        ),
        migrations.CreateModel(
            name='Parada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horario', models.TimeField(verbose_name='Horário da Parada')),
                ('ordem', models.PositiveIntegerField(help_text='Ordem da parada na rota', verbose_name='Ordem')),
                ('tempo_parada', models.PositiveIntegerField(default=2, verbose_name='Tempo de Parada (minutos)')),
                ('passageiros_estimados', models.PositiveIntegerField(default=0, verbose_name='Passageiros Estimados')),
                ('horario_transporte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paradas', to='movemuz.horariotransporte', verbose_name='Horário de Transporte')),
                ('ponto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paradas', to='movemuz.ponto', verbose_name='Ponto')),
            ],
            options={
                'verbose_name': 'Parada',
                'verbose_name_plural': 'Paradas',
                'ordering': ['horario_transporte', 'ordem'],
                'unique_together': {('horario_transporte', 'ordem')},
            },
        ),
    ]
