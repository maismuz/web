# Generated by Django 5.2 on 2025-07-16 17:39

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome completo do usuário ou razão social da empresa', max_length=100, verbose_name='Nome')),
                ('eh_empresa', models.BooleanField(default=False, help_text='Marcar se o usuário é uma empresa', verbose_name='É Empresa')),
                ('eh_prestador', models.BooleanField(default=False, help_text='Marcar se o usuário é um prestador de serviços', verbose_name='É Prestador de Serviço')),
                ('telefone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Digite um número de telefone válido', regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$')], verbose_name='Telefone')),
                ('biografia', models.TextField(blank=True, help_text='Descrição sobre o usuário ou empresa', verbose_name='Biografia')),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='usuarios/', verbose_name='Imagem de Perfil')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100, verbose_name='Título do Serviço')),
                ('descricao', models.TextField(help_text='Descrição detalhada do serviço oferecido', verbose_name='Descrição')),
                ('categoria', models.CharField(choices=[('tecnologia', 'Tecnologia'), ('saude', 'Saúde'), ('educacao', 'Educação'), ('beleza', 'Beleza e Estética'), ('domesticos', 'Serviços Domésticos'), ('construcao', 'Construção e Reforma'), ('transporte', 'Transporte'), ('consultoria', 'Consultoria'), ('design', 'Design e Arte'), ('outros', 'Outros')], max_length=100, verbose_name='Categoria')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('contato', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Digite um número de telefone válido', regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$')], verbose_name='Contato')),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='servicos/', verbose_name='Imagem do Serviço')),
                ('ativo', models.BooleanField(default=True, help_text='Marcar como inativo para ocultar o serviço', verbose_name='Ativo')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicos', to='contratamuz.usuario', verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Serviço',
                'verbose_name_plural': 'Serviços',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='VagaEmprego',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100, verbose_name='Título da Vaga')),
                ('descricao', models.TextField(help_text='Descrição detalhada da vaga e requisitos', verbose_name='Descrição')),
                ('salario', models.DecimalField(blank=True, decimal_places=2, help_text='Salário oferecido (opcional)', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Salário')),
                ('localizacao', models.CharField(max_length=100, verbose_name='Localização')),
                ('categoria', models.CharField(choices=[('tecnologia', 'Tecnologia'), ('saude', 'Saúde'), ('educacao', 'Educação'), ('administracao', 'Administração'), ('vendas', 'Vendas'), ('marketing', 'Marketing'), ('recursos_humanos', 'Recursos Humanos'), ('financeiro', 'Financeiro'), ('operacional', 'Operacional'), ('outros', 'Outros')], max_length=100, verbose_name='Categoria')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('ativa', models.BooleanField(default=True, help_text='Marcar como inativa quando a vaga for preenchida', verbose_name='Vaga Ativa')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vagas', to='contratamuz.usuario', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Vaga de Emprego',
                'verbose_name_plural': 'Vagas de Emprego',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.IntegerField(help_text='Nota de 1 a 5 estrelas', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Nota')),
                ('comentario', models.TextField(blank=True, help_text='Comentário sobre o serviço (opcional)', verbose_name='Comentário')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Data da Avaliação')),
                ('servico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes', to='contratamuz.servico', verbose_name='Serviço')),
                ('avaliador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_feitas', to='contratamuz.usuario', verbose_name='Avaliador')),
            ],
            options={
                'verbose_name': 'Avaliação',
                'verbose_name_plural': 'Avaliações',
                'ordering': ['-criado_em'],
                'unique_together': {('servico', 'avaliador')},
            },
        ),
        migrations.CreateModel(
            name='Candidatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensagem', models.TextField(blank=True, help_text='Mensagem do candidato (opcional)', verbose_name='Mensagem')),
                ('data_candidatura', models.DateTimeField(auto_now_add=True, verbose_name='Data da Candidatura')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('em_analise', 'Em Análise'), ('aceita', 'Aceita'), ('rejeitada', 'Rejeitada')], default='pendente', max_length=15, verbose_name='Status')),
                ('candidato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidaturas', to='contratamuz.usuario', verbose_name='Candidato')),
                ('vaga', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidaturas', to='contratamuz.vagaemprego', verbose_name='Vaga')),
            ],
            options={
                'verbose_name': 'Candidatura',
                'verbose_name_plural': 'Candidaturas',
                'ordering': ['-data_candidatura'],
                'unique_together': {('candidato', 'vaga')},
            },
        ),
    ]
