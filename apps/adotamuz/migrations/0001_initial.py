# Generated by Django 5.2 on 2025-07-16 17:39

import apps.adotamuz.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Adocao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_animal', models.CharField(help_text='Nome ou apelido do animal', max_length=100, validators=[apps.adotamuz.models.validar_nome], verbose_name='Nome do Animal')),
                ('descricao', models.TextField(help_text='Informações sobre o animal, comportamento, cuidados, etc.', verbose_name='Descrição')),
                ('foto', models.ImageField(help_text='Imagem do animal disponível para adoção', upload_to='adocoes/fotos/', verbose_name='Foto do Animal')),
                ('contato', models.CharField(help_text='Número para contato com quem está doando', max_length=20, validators=[django.core.validators.RegexValidator(message='Digite um número de telefone válido.', regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$')], verbose_name='Telefone ou WhatsApp')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('disponivel', models.BooleanField(default=True, help_text='Marque como falso quando o animal for adotado', verbose_name='Disponível para Adoção')),
            ],
            options={
                'verbose_name': 'Anúncio de Adoção',
                'verbose_name_plural': 'Anúncios de Adoção',
                'ordering': ['-data_cadastro'],
            },
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Evento')),
                ('data', models.DateField(verbose_name='Data do Evento')),
                ('hora', models.TimeField(verbose_name='Hora do Evento')),
                ('local', models.CharField(max_length=255, verbose_name='Local')),
                ('organizador', models.CharField(max_length=150, verbose_name='Organizador')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
                'ordering': ['data', 'hora'],
            },
        ),
        migrations.CreateModel(
            name='InstituicaoParceira',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150, unique=True, verbose_name='Nome da Instituição')),
                ('cnpj', models.CharField(max_length=18, unique=True, validators=[django.core.validators.RegexValidator(message='CNPJ deve estar no formato 00.000.000/0000-00', regex='^\\d{2}\\.\\d{3}\\.\\d{3}/\\d{4}-\\d{2}$')], verbose_name='CNPJ')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço')),
                ('servicos_ofertados', models.TextField(verbose_name='Serviços Ofertados')),
                ('telefone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Digite um número de telefone válido', regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$')], verbose_name='Telefone')),
            ],
            options={
                'verbose_name': 'Instituição Parceira',
                'verbose_name_plural': 'Instituições Parceiras',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='TipoDenuncia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Tipo de denúncia (ex: abandono, violência, etc.)', max_length=100, unique=True, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Tipo de Denúncia',
                'verbose_name_plural': 'Tipos de Denúncia',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Raca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, validators=[apps.adotamuz.models.validar_nome], verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('porte', models.CharField(choices=[('pequeno', 'Pequeno'), ('medio', 'Médio'), ('grande', 'Grande')], default='medio', max_length=10, verbose_name='Porte')),
                ('especie', models.CharField(choices=[('cachorro', 'Cachorro'), ('gato', 'Gato')], default='cachorro', max_length=10, verbose_name='Espécie')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
            ],
            options={
                'verbose_name': 'Raça',
                'verbose_name_plural': 'Raças',
                'ordering': ['nome'],
                'unique_together': {('nome', 'especie')},
            },
        ),
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome ou apelido do animal (se houver)', max_length=100, validators=[apps.adotamuz.models.validar_nome], verbose_name='Nome do animal')),
                ('porte', models.CharField(choices=[('pequeno', 'Pequeno'), ('medio', 'Médio'), ('grande', 'Grande')], help_text='Porte físico do animal', max_length=15, verbose_name='Porte')),
                ('cor', models.CharField(help_text='Cor predominante do animal', max_length=30, verbose_name='Cor')),
                ('localizacao', models.CharField(help_text='Local onde o animal se encontra', max_length=150, verbose_name='Localização')),
                ('foto', models.ImageField(help_text='Foto principal do animal', upload_to='animais/fotos/', verbose_name='Foto do Animal')),
                ('descricao', models.TextField(blank=True, help_text='Descrição detalhada do animal', verbose_name='Descrição')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('raca', models.ForeignKey(blank=True, help_text='Raça do animal (opcional)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='adotamuz.raca', verbose_name='Raça')),
            ],
            options={
                'verbose_name': 'Animal',
                'verbose_name_plural': 'Animais',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Denuncia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(verbose_name='Data')),
                ('localizacao', models.CharField(max_length=255, verbose_name='Localização')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='denuncias/fotos/', verbose_name='Foto')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='denuncias', to='adotamuz.tipodenuncia', verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Denúncia',
                'verbose_name_plural': 'Denúncias',
                'ordering': ['-data'],
            },
        ),
        migrations.CreateModel(
            name='TipoProcedimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome do Procedimento')),
                ('data', models.DateField(verbose_name='Data')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tipos_procedimentos', to='adotamuz.animal', verbose_name='Animal')),
                ('instituicao_responsavel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adotamuz.instituicaoparceira', verbose_name='Instituição Responsável')),
            ],
            options={
                'verbose_name': 'Tipo de Procedimento',
                'verbose_name_plural': 'Tipos de Procedimentos',
                'ordering': ['-data'],
            },
        ),
        migrations.CreateModel(
            name='Procedimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procedimentos', to='adotamuz.tipoprocedimento', verbose_name='Tipo de Procedimento')),
            ],
            options={
                'verbose_name': 'Procedimento',
                'verbose_name_plural': 'Procedimentos',
            },
        ),
    ]
