# Generated by Django 5.2 on 2025-07-16 17:39

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome da Categoria')),
                ('descricao', models.TextField(blank=True, help_text='Descrição da categoria', verbose_name='Descrição')),
                ('ativa', models.BooleanField(default=True, help_text='Indica se a categoria está ativa', verbose_name='Ativa')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Objeto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do Item')),
                ('descricao', models.TextField(help_text='Descrição detalhada do item', verbose_name='Descrição')),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='objetos/principais/', verbose_name='Imagem Principal')),
                ('preco', models.DecimalField(decimal_places=2, help_text='Preço do item (obrigatório para vendas)', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Preço')),
                ('tipo', models.CharField(choices=[('venda', 'Venda'), ('doacao', 'Doação'), ('troca', 'Troca')], max_length=10, verbose_name='Tipo de Transação')),
                ('estado', models.CharField(choices=[('novo', 'Novo'), ('seminovo', 'Seminovo'), ('usado', 'Usado'), ('danificado', 'Danificado')], max_length=15, verbose_name='Estado do Item')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('ativo', models.BooleanField(default=True, help_text='Marcar como inativo quando vendido/doado', verbose_name='Ativo')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='objetos', to='escambuz.categoria', verbose_name='Categoria')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objetos', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Objeto',
                'verbose_name_plural': 'Objetos',
                'ordering': ['-data_cadastro'],
            },
        ),
        migrations.CreateModel(
            name='Mensagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assunto', models.CharField(blank=True, help_text='Assunto da mensagem (opcional)', max_length=200, verbose_name='Assunto')),
                ('mensagem', models.TextField(verbose_name='Mensagem')),
                ('data_envio', models.DateTimeField(auto_now_add=True, verbose_name='Data de Envio')),
                ('status', models.CharField(choices=[('nao_lida', 'Não Lida'), ('lida', 'Lida'), ('arquivada', 'Arquivada')], default='nao_lida', max_length=20, verbose_name='Status')),
                ('destinatario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensagens_recebidas', to=settings.AUTH_USER_MODEL, verbose_name='Destinatário')),
                ('remetente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensagens_enviadas', to=settings.AUTH_USER_MODEL, verbose_name='Remetente')),
                ('objeto_relacionado', models.ForeignKey(blank=True, help_text='Objeto relacionado à mensagem (opcional)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mensagens', to='escambuz.objeto', verbose_name='Objeto Relacionado')),
            ],
            options={
                'verbose_name': 'Mensagem',
                'verbose_name_plural': 'Mensagens',
                'ordering': ['-data_envio'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoTransacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(auto_now_add=True, verbose_name='Data')),
                ('status', models.CharField(choices=[('proposta_enviada', 'Proposta Enviada'), ('proposta_aceita', 'Proposta Aceita'), ('proposta_rejeitada', 'Proposta Rejeitada'), ('transacao_concluida', 'Transação Concluída'), ('transacao_cancelada', 'Transação Cancelada')], max_length=25, verbose_name='Status')),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre a transação', verbose_name='Observações')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_transacoes', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
                ('objeto_oferecido', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ofertas', to='escambuz.objeto', verbose_name='Objeto Oferecido')),
                ('objeto_recebido', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recebidos', to='escambuz.objeto', verbose_name='Objeto Recebido')),
            ],
            options={
                'verbose_name': 'Histórico de Transação',
                'verbose_name_plural': 'Histórico de Transações',
                'ordering': ['-data'],
            },
        ),
        migrations.CreateModel(
            name='FotoObjeto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagem', models.ImageField(upload_to='objetos/adicionais/', verbose_name='Imagem Adicional')),
                ('descricao', models.CharField(blank=True, help_text='Descrição opcional da foto', max_length=200, verbose_name='Descrição da Foto')),
                ('objeto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fotos_adicionais', to='escambuz.objeto', verbose_name='Objeto')),
            ],
            options={
                'verbose_name': 'Foto do Objeto',
                'verbose_name_plural': 'Fotos dos Objetos',
                'ordering': ['objeto', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Oferta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título da Oferta')),
                ('descricao', models.TextField(help_text='Descrição detalhada da oferta', verbose_name='Descrição')),
                ('preco', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Preço')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_validade', models.DateField(blank=True, help_text='Data limite da oferta (opcional)', null=True, verbose_name='Data de Validade')),
                ('ativa', models.BooleanField(default=True, help_text='Marcar como inativa para ocultar a oferta', verbose_name='Oferta Ativa')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ofertas', to='escambuz.categoria', verbose_name='Categoria')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ofertas', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Oferta',
                'verbose_name_plural': 'Ofertas',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='Transacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome da Transação')),
                ('descricao', models.TextField(blank=True, help_text='Detalhes da transação', verbose_name='Descrição')),
                ('tipo', models.CharField(choices=[('venda', 'Venda'), ('troca', 'Troca'), ('doacao', 'Doação'), ('outro', 'Outro')], max_length=20, verbose_name='Tipo de Transação')),
                ('preco', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Valor da Transação')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('concluida', 'Concluída'), ('cancelada', 'Cancelada')], default='pendente', max_length=15, verbose_name='Status')),
                ('data_transacao', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data da Transação')),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transacoes', to='escambuz.categoria', verbose_name='Categoria')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transacoes', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Transação',
                'verbose_name_plural': 'Transações',
                'ordering': ['-data_transacao'],
            },
        ),
        migrations.CreateModel(
            name='AvaliacaoUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.IntegerField(help_text='Nota de 1 a 5 estrelas', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Nota')),
                ('comentario', models.TextField(blank=True, help_text='Comentário sobre a experiência (opcional)', verbose_name='Comentário')),
                ('data_avaliacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Avaliação')),
                ('usuario_avaliado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_recebidas', to=settings.AUTH_USER_MODEL, verbose_name='Usuário Avaliado')),
                ('usuario_avaliador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_feitas', to=settings.AUTH_USER_MODEL, verbose_name='Usuário Avaliador')),
                ('transacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='avaliacoes', to='escambuz.transacao', verbose_name='Transação Relacionada')),
            ],
            options={
                'verbose_name': 'Avaliação de Usuário',
                'verbose_name_plural': 'Avaliações de Usuários',
                'ordering': ['-data_avaliacao'],
                'unique_together': {('usuario_avaliado', 'usuario_avaliador', 'transacao')},
            },
        ),
    ]
