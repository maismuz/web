# Generated by Django 5.2 on 2025-07-16 17:39

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Categorias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome da categoria', max_length=100, unique=True, verbose_name='Nome da Categoria')),
                ('descricao', models.TextField(blank=True, help_text='Descrição da categoria', verbose_name='Descrição')),
                ('ativa', models.BooleanField(default=True, help_text='Indica se a categoria está ativa', verbose_name='Ativa')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='GuiaTuristico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do guia de turismo', max_length=100, verbose_name='Nome do Guia')),
                ('descricao', models.TextField(help_text='Descrição detalhada do guia de turismo', verbose_name='Descrição do Guia')),
                ('duracao', models.DurationField(help_text='Duração estimada do tour', verbose_name='Duração')),
                ('nivel_dificuldade', models.CharField(choices=[('facil', 'Fácil'), ('moderado', 'Moderado'), ('dificil', 'Difícil'), ('extremo', 'Extremo')], default='facil', max_length=10, verbose_name='Nível de Dificuldade')),
                ('valor', models.DecimalField(decimal_places=2, help_text='Valor do tour em reais', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Valor')),
                ('entidade_responsavel', models.CharField(help_text='Empresa ou pessoa responsável pelo tour', max_length=200, verbose_name='Entidade Responsável')),
                ('contato', models.CharField(help_text='Telefone, email ou outras informações de contato', max_length=200, validators=[django.core.validators.RegexValidator(message='Digite um telefone válido ou e-mail', regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$|^[\\w\\.-]+@[\\w\\.-]+\\.\\w+$')], verbose_name='Contato')),
                ('imagem', models.ImageField(blank=True, help_text='Imagem representativa do guia', null=True, upload_to='guias_turisticos/', verbose_name='Imagem do Guia')),
                ('pontos_parada', models.TextField(blank=True, help_text='Lista dos principais pontos de parada do tour', verbose_name='Pontos de Parada')),
                ('ativo', models.BooleanField(default=True, help_text='Indica se o guia está disponível', verbose_name='Ativo')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
            ],
            options={
                'verbose_name': 'Guia de Turismo',
                'verbose_name_plural': 'Guias de Turismo',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Permissao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('admin', 'Administrador'), ('autor', 'Autor'), ('comum', 'Comum')], default='comum', max_length=10, verbose_name='Tipo de Permissão')),
                ('descricao', models.TextField(blank=True, help_text='Descrição das permissões', verbose_name='Descrição')),
                ('ativa', models.BooleanField(default=True, help_text='Indica se a permissão está ativa', verbose_name='Ativa')),
            ],
            options={
                'verbose_name': 'Permissão',
                'verbose_name_plural': 'Permissões',
                'ordering': ['tipo'],
            },
        ),
        migrations.CreateModel(
            name='Estabelecimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do estabelecimento', max_length=100, verbose_name='Nome do Estabelecimento')),
                ('endereco', models.CharField(help_text='Endereço completo do estabelecimento', max_length=200, verbose_name='Endereço')),
                ('contato', models.CharField(help_text='Telefone, e-mail ou outro contato', max_length=100, validators=[django.core.validators.RegexValidator(message='Digite um telefone válido ou e-mail', regex='^\\(?\\d{2}\\)?\\s?\\d{4,5}-?\\d{4}$|^[\\w\\.-]+@[\\w\\.-]+\\.\\w+$')], verbose_name='Contato')),
                ('horario_funcionamento', models.CharField(blank=True, help_text='Ex: Segunda a Sexta, 8h às 18h', max_length=100, verbose_name='Horário de Funcionamento')),
                ('descricao', models.TextField(blank=True, help_text='Descrição detalhada do estabelecimento', verbose_name='Descrição')),
                ('imagem', models.ImageField(blank=True, help_text='Imagem principal do estabelecimento', null=True, upload_to='estabelecimentos/', verbose_name='Imagem Principal')),
                ('status', models.CharField(choices=[('em_analise', 'Em Análise'), ('aprovado', 'Aprovado'), ('rejeitado', 'Rejeitado')], default='em_analise', max_length=15, verbose_name='Status')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('categoria', models.ForeignKey(help_text='Categoria do estabelecimento', on_delete=django.db.models.deletion.PROTECT, related_name='estabelecimentos', to='turismuz.categorias', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Estabelecimento',
                'verbose_name_plural': 'Estabelecimentos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_avaliacao', models.CharField(choices=[('estabelecimento', 'Estabelecimento'), ('guia_turistico', 'Guia Turístico')], max_length=20, verbose_name='Tipo de Avaliação')),
                ('nota', models.PositiveSmallIntegerField(help_text='Nota de 1 a 5 estrelas', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Nota')),
                ('comentario', models.TextField(blank=True, help_text='Comentário sobre a experiência', verbose_name='Comentário')),
                ('usuario', models.CharField(help_text='Nome de quem fez a avaliação', max_length=100, verbose_name='Nome do Usuário')),
                ('email', models.EmailField(blank=True, help_text='E-mail do avaliador (opcional)', max_length=254, verbose_name='E-mail')),
                ('data_avaliacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Avaliação')),
                ('aprovada', models.BooleanField(default=True, help_text='Indica se a avaliação foi aprovada para exibição', verbose_name='Aprovada')),
                ('estabelecimento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes', to='turismuz.estabelecimento', verbose_name='Estabelecimento')),
                ('guia_turistico', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes', to='turismuz.guiaturistico', verbose_name='Guia Turístico')),
            ],
            options={
                'verbose_name': 'Avaliação',
                'verbose_name_plural': 'Avaliações',
                'ordering': ['-data_avaliacao'],
            },
        ),
        migrations.CreateModel(
            name='Publicacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text='Título que aparecerá no card de sua publicação', max_length=255, verbose_name='Título da Publicação')),
                ('texto_noticia', models.TextField(help_text='Texto completo da publicação', verbose_name='Texto da Publicação')),
                ('resumo', models.TextField(blank=True, help_text='Resumo da publicação para exibição em listas', max_length=500, verbose_name='Resumo')),
                ('imagem_principal', models.ImageField(blank=True, help_text='Imagem principal da publicação', null=True, upload_to='publicacoes/', verbose_name='Imagem Principal')),
                ('legenda_imagem', models.CharField(blank=True, help_text='Legenda da imagem principal', max_length=255, verbose_name='Legenda da Imagem')),
                ('autor', models.CharField(help_text='Nome do autor da publicação', max_length=100, verbose_name='Autor')),
                ('status', models.CharField(choices=[('rascunho', 'Rascunho'), ('publicado', 'Publicado'), ('arquivado', 'Arquivado')], default='rascunho', max_length=15, verbose_name='Status')),
                ('data_publicacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Publicação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('visualizacoes', models.PositiveIntegerField(default=0, help_text='Número de visualizações da publicação', verbose_name='Visualizações')),
                ('categoria', models.ForeignKey(help_text='Categoria da publicação', on_delete=django.db.models.deletion.PROTECT, related_name='publicacoes', to='turismuz.categorias', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Publicação',
                'verbose_name_plural': 'Publicações',
                'ordering': ['-data_publicacao'],
            },
        ),
        migrations.CreateModel(
            name='ImagemPublicacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagem', models.ImageField(upload_to='publicacoes/galeria/', verbose_name='Imagem')),
                ('legenda', models.CharField(help_text='Descrição da imagem para acessibilidade', max_length=255, verbose_name='Legenda da Imagem')),
                ('ordem', models.PositiveIntegerField(default=0, help_text='Ordem de exibição da imagem', verbose_name='Ordem')),
                ('publicacao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imagens_adicionais', to='turismuz.publicacao', verbose_name='Publicação')),
            ],
            options={
                'verbose_name': 'Imagem da Publicação',
                'verbose_name_plural': 'Imagens das Publicações',
                'ordering': ['publicacao', 'ordem'],
            },
        ),
    ]
